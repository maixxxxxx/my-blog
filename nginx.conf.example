server {
    listen 80;
    server_name 你的域名.com www.你的域名.com;  # 替换成你的实际域名
    
    # 访问日志
    access_log /var/log/nginx/blog_access.log;
    error_log /var/log/nginx/blog_error.log;
    
    # 客户端最大上传大小
    client_max_body_size 10M;
    
    # 代理到 Node.js 服务
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        
        # WebSocket 支持（如果需要）
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # 请求头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 静态资源缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:5000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/x-javascript application/xml+rss 
               application/javascript application/json;
}

# HTTPS 配置（使用 Certbot 自动配置后会生成）
# server {
#     listen 443 ssl http2;
#     server_name 你的域名.com www.你的域名.com;
#     
#     ssl_certificate /etc/letsencrypt/live/你的域名.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/你的域名.com/privkey.pem;
#     
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # 其他配置与上面相同
#     location / {
#         proxy_pass http://localhost:5000;
#         # ...
#     }
# }

# HTTP 重定向到 HTTPS
# server {
#     listen 80;
#     server_name 你的域名.com www.你的域名.com;
#     return 301 https://$server_name$request_uri;
# }

